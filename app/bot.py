import telebot
from telebot import types
from quiz import TOKEN, quiz_data, questions, review, result
from functions import get_totem_animal, get_animal_photo

bot = telebot.TeleBot(TOKEN)


@bot.message_handler(commands=['start'])
def start(message: telebot.types.Message):
    username = message.chat.username if message.chat.username else "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"

    photo = open('./photo/Timosha.jpeg', 'rb')
    bot.send_photo(
        message.chat.id,
        photo,
        caption=(
            f'–ü—Ä–∏–≤–µ—Ç, {username}! –ú–µ–Ω—è –∑–æ–≤—É—Ç –ú–∞–Ω—É–ª –¢–∏–º–æ—à–∞üê±. '
            '–Ø –∂–∏–≤—É –≤ –ú–æ—Å–∫–æ–≤—Å–∫–æ–º –ó–æ–æ–ø–∞—Ä–∫–µ. '
            f'–•–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å —Å–≤–æ–µ —Ç–æ—Ç–µ–º–Ω–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ? '
            '–ù–∞–∂–º–∏ –Ω–∞ —ç—Ç—É –∫–Ω–æ–ø–æ—á–∫—É –∏ —Ç—ã —É–∑–Ω–∞–µ—à—å: /letsgo'
        )
    )
    photo.close()


@bot.message_handler(commands=['letsgo'])
def start_quiz(message):
    user_id = message.chat.id
    if user_id not in quiz_data:
        quiz_data[user_id] = {'current_question': 0, 'answers': []}
    send_questions(user_id)


@bot.message_handler(commands=['getreview'])
def get_review(admin_id):
    admin_id = '588200056'
    for rev in review:
        bot.send_message(admin_id, rev)


def send_questions(user_id):
    user = quiz_data.get(user_id)
    if not user:
        bot.send_message(user_id, "–°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–π–¥–∏—Ç–µ –≤–∏–∫—Ç–æ—Ä–∏–Ω—É.")
        return

    question_index = user['current_question']
    try:
        if question_index < len(questions):
            question_data = questions[question_index]
            question_text = question_data['question']
            answers = question_data['answer']

            markup = types.InlineKeyboardMarkup()
            for answer in answers.keys():
                markup.add(types.InlineKeyboardButton(text=answer, callback_data=f'{question_index}_{answer}'))
            bot.send_message(user_id, question_text, reply_markup=markup)
        else:
            result[user_id] = get_totem_animal(user['answers'])
            totem_animal = get_totem_animal(user['answers'])
            photo = open(get_animal_photo(totem_animal), 'rb')

            markup_end = types.InlineKeyboardMarkup()
            markup_end.add(types.InlineKeyboardButton(text='–ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –≤ —Å–æ—Ü—Å–µ—Ç—è—Ö', callback_data='share'))
            markup_end.add(types.InlineKeyboardButton(text='–£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ –ü—Ä–æ–≥—Ä–∞–º–º–µ –æ–ø–µ–∫–∏ –≤ –ú–æ—Å–∫–æ–≤—Å–∫–æ–º –∑–æ–æ–ø–∞—Ä–∫–µ', url='https://moscowzoo.ru/about/guardianship'))
            markup_end.add(types.InlineKeyboardButton(text='–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤', callback_data='review'))
            markup_end.add(types.InlineKeyboardButton(text='–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫—É –ó–æ–æ–ø–∞—Ä–∫–∞', callback_data='question'))
            markup_end.add(types.InlineKeyboardButton(text='–ü—Ä–æ–π—Ç–∏ –≤–∏–∫—Ç–æ—Ä–∏–Ω—É –∑–∞–Ω–æ–≤–æ', callback_data='replay'))

            bot.send_photo(user_id, photo, caption=(
                f'–¢–≤–æ—ë —Ç–æ—Ç–µ–º–Ω–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ —ç—Ç–æ - {totem_animal}!'
                f'–ê —Ç—ã –∑–Ω–∞–ª, —á—Ç–æ {totem_animal} –Ω—É–∂–¥–∞–µ—Ç—Å—è –≤ –æ–ø–µ–∫—É–Ω–µ? '
                '–ò —Ç—ã –±–µ–∑ —Ç—Ä—É–¥–∞ –º–æ–∂–µ—à—å –∏–º —Å—Ç–∞—Ç—å! '
                '–í—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–≥—Ä–∞–º–º–µ –æ–ø–µ–∫—É–Ω—Å—Ç–≤–∞ –≤ –ú–æ—Å–∫–æ–≤—Å–∫–æ–º –∑–æ–æ–ø–∞—Ä–∫–µ —Ç—ã —Å–º–æ–∂–µ—à—å –Ω–∞–π—Ç–∏ –ø–æ '
                '—Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ. '
                '–í–æ–∑—å–º–∏—Ç–µ –∂–∏–≤–æ—Ç–Ω–æ–µ –ø–æ–¥ –æ–ø–µ–∫—É! –°—Ç–∞–Ω—å—Ç–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –ø—Ä–æ–≥—Ä–∞–º–º—ã ¬´–ö–ª—É–± –¥—Ä—É–∑–µ–π –∑–æ–æ–ø–∞—Ä–∫–∞¬ª.'
            ), reply_markup=markup_end)
            photo.close()

    except Exception as e:
        bot.send_message(user_id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        print(f"Error: {e}")
        quiz_data[user_id]['current_question'] = 0
        quiz_data[user_id]['answers'] = []


@bot.callback_query_handler(func=lambda call: '_' in call.data)
def callback_query(call):
    user_id = call.message.chat.id
    user = quiz_data[user_id]

    question_index, user_answer = call.data.split('_')
    question_index = int(question_index)

    user['answers'].append(user_answer)
    user['current_question'] = question_index + 1
    send_questions(user_id)


@bot.callback_query_handler(func=lambda call: call.data in ['replay', 'review', 'question', 'share'])
def handle_special_buttons(call):
    user_id = call.message.chat.id
    if call.data == 'replay':
        if user_id in quiz_data:
            del result[user_id]
            quiz_data[user_id]['current_question'] = 0
            quiz_data[user_id]['answers'] = []
            send_questions(user_id)
        else:
            bot.send_message(user_id, "–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞.")

    elif call.data == 'review':
        mesg = bot.send_message(user_id,
                                '–û—Å—Ç–∞–≤—å—Ç–µ –æ—Ç–∑—ã–≤ –≤ –≥—Ä–∞—Ñ–µ —Å–æ–æ–±—â–µ–Ω–∏—è\n–≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –Ω–∞–º —Å—Ç–∞—Ç—å –ª—É—á—à–µ –¥–ª—è –≤–∞—Å\n–ü–æ–ª–Ω–æ—Å—Ç—å—é –∞–Ω–æ–Ω–∏–º–Ω–æ')
        bot.register_next_step_handler(mesg, add_review)

    elif call.data == 'question':
        ques = bot.send_message(user_id,
                                '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –≤ –≥—Ä–∞—Ñ–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n<–í–∞—à –≤–æ–ø—Ä–æ—Å>\n<@UserName –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏>')
        bot.register_next_step_handler(ques, send_ques)

    elif call.data == 'share':
        bot.send_message(user_id, "–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –≤ —Å–æ—Ü—Å–µ—Ç—è—Ö!")

    bot.answer_callback_query(call.id)


def add_review(message):
    review.append(message.text)
    bot.send_message(message.chat.id, '–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π –æ—Ç–∑—ã–≤!')


def send_ques(message):
    user_id = message.chat.id
    admin_id = '588200056'
    ques = f'–†–µ–∑—É–ª—å—Ç–∞—Ç –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã: {result[user_id]}\n–°–æ–æ–±—â–µ–Ω–∏–µ: {message.text}'
    bot.send_message(chat_id=admin_id, text=ques)
    bot.send_message(user_id, '–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!')


if __name__ == "__main__":
    bot.polling(none_stop=True)